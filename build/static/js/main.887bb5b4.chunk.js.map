{"version":3,"sources":["assets/images/terraceLogo.png","redux/actions/menuActions.js","redux/actions/types.js","redux/actions/productActions.js","redux/actions/roomActions.js","redux/actions/tableActions.js","components/MenuList.js","components/ProductList.js","pages/AddProduct.js","pages/AddMenu.js","components/NavbarMenu.js","components/RoomList.js","components/TableList.js","pages/AddTable.js","pages/AddRoom.js","App.js","reportWebVitals.js","redux/reducers/menuReducer.js","redux/reducers/productReducer.js","redux/reducers/roomReducer.js","redux/reducers/tableReducer.js","redux/reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","getMenuList","dispatch","axios","get","then","response","type","payload","data","addMenu","menu","console","log","post","removeMenu","selectMenu","getProductList","id","addProduct","product","getRoomList","addRoom","room","selectRoom","getTableList","addTable","table","MenuList","this","props","menuId","_this","react_default","a","createElement","reactstrap_module","menus","map","active","selectedMenu","onClick","onClicked","key","className","name","Component","connect","state","products","actions","ProductList","style","display","flexDirection","flexWrap","productId","fontSize","price","AddProduct","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","parseInt","target","value","productName","description","photo","_this2","for","onChange","saveProduct","color","AddMenu","menuName","parentId","xs","placeholder","saveMenu","components_MenuList","marginTop","marginLeft","components_ProductList","textAlign","pages_AddProduct","logo","require","navOptions","label","react_router_dom","to","NavbarMenu","src","list","index","RoomList","roomName","modalRoom","roomId","rooms","selectedRoom","TableList","tables","tableId","AddTable","tableName","statu","date","Date","userId","firstName","lastName","saveTable","AddRoom","saveRoom","components_RoomList","components_TableList","pages_AddTable","appRoutes","path","element","pages_AddRoom","pages_AddMenu","App","NavbarMenu_NavbarMenu","react_router","route","reportWebVitals","onPerfEntry","Function","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","INISIAL_STATE","INITIAL_STATE","combineReducers","arguments","length","undefined","action","objectSpread","concat","root","ReactDOM","createRoot","document","getElementById","store","createStore","reducers","applyMiddleware","ReduxThunk","render","StrictMode","es","src_App"],"mappings":"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","file":"static/js/main.887bb5b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/terraceLogo.9c5f536f.png\";","import axios from 'axios';\nimport {ADD_MENU, GET_MENU_LIST, REMOVE_MENU,SELECT_MENU} from './types';\n\nexport const getMenuList = () => {\n    return (dispatch) => {\n        axios.get('https://api.terracesarkoy.com/api/Product/GetMenuList')\n\n        .then(response => {\n            dispatch ({\n                type: GET_MENU_LIST,\n                payload: response.data\n            })\n        })\n    }\n}\n\nexport const addMenu = (menu) => {\n    console.log('1-------------------->', menu);\n    return (dispatch) => {\n        axios.post('https://api.terracesarkoy.com/api/Product/addmenu', menu)\n        .then(response => {\n            console.log('ADD_MENU-------------------->', response);\n            dispatch ({\n                type: ADD_MENU,\n                payload: response.data\n            })\n        })\n    }\n}\n\nexport const removeMenu = () => {\n    return (dispatch) => {\n        dispatch ({\n            type: REMOVE_MENU\n        })\n    }\n}\n\nexport const selectMenu = (menu) => {\n    return (dispatch) => {\n        dispatch ({\n            type: SELECT_MENU,\n            payload: menu\n        })\n    }\n}\n","export const EMAIL_CHANGED = 'email_changed';\nexport const PASSWORD_CHANGED = 'password_changed';\n\nexport const ADD_MENU = 'add_menu';\nexport const GET_MENU_LIST = 'get_menu_list';\nexport const REMOVE_MENU = 'remove_menu';\nexport const MENU_NAME_CHANGE = 'menu_name_change';\nexport const CHANGE_MENU = 'change_menu';\n\nexport const ADD_PRODUCT = 'add_product';\nexport const GET_PRODUCT_LIST = 'get_product_list';\n\nexport const ADD_ROOM = 'add_room';\nexport const GET_ROOM_LIST = 'get_room_list';\n\nexport const ADD_TABLE = 'add_table';\nexport const GET_TABLE_LIST = 'get_table_list';\n\nexport const SELECT_MENU = 'select_menu';\nexport const SELECT_ROOM = 'select_room';","import axios from 'axios';\nimport {ADD_PRODUCT, GET_PRODUCT_LIST} from './types';\n\nexport const getProductList = (id) => {\n    return (dispatch) => {\n        axios.get('https://api.terracesarkoy.com/api/Product/GetListByMenuId?MenuId=' + id)\n        .then(response => {\n            dispatch ({\n                type: GET_PRODUCT_LIST,\n                payload: response.data\n            })\n        })\n    }\n}\n\nexport const addProduct = (product) => {\n    console.log('1--------------->', product);\n    return (dispatch) => {\n        axios.post('https://api.terracesarkoy.com/api/Product/addproduct', product)\n        .then(response => {\n            console.log('2--------------->', response.data);\n            dispatch ({\n                type: ADD_PRODUCT,\n                payload: response.data\n            })\n        })\n    }\n}","import axios from 'axios';\nimport { GET_ROOM_LIST, ADD_ROOM, SELECT_ROOM } from './types';\n\nexport const getRoomList = () => {\n    return (dispatch) => {\n        axios.get('https://api.terracesarkoy.com/api/Admin/GetRoomList')\n        .then(response => {\n            dispatch ({\n                type: GET_ROOM_LIST,\n                payload: response.data\n            })\n        })\n    }\n}\n\nexport const addRoom = (room,) => {\n    console.log('2---------->', room);\n    return (dispatch) => {\n        axios.post('https://api.terracesarkoy.com/api/Admin/AddRoom', room)\n        .then(response => {\n            console.log('ADD_ROOM-------------------->', response.data);\n            console.log('3---------->', response.data);\n            console.log('rooms.push---------->', response.data);\n            dispatch ({\n                type: ADD_ROOM,\n                payload: response.data\n            })\n        })\n    }\n}\n\nexport const selectRoom = (room) => {\n    return (dispatch) => {\n        dispatch ({\n            type: SELECT_ROOM,\n            payload: room\n        })\n    }\n}","import axios from 'axios';\nimport {GET_TABLE_LIST,ADD_TABLE} from './types';\n\nexport const getTableList = (id) => {\n    return (dispatch) => {\n        axios.get('https://api.terracesarkoy.com/api/Admin/GetTableListByRoomId?RoomId=' + id)\n        .then(response => {\n            dispatch ({\n                type: GET_TABLE_LIST,\n                payload: response.data\n            })\n        })\n    }\n}\n\nexport const addTable = (table) => {\n    console.log('1------------>', table);\n    return (dispatch) => {\n        axios.post('https://api.terracesarkoy.com/api/Admin/AddTable', table)\n        .then(response => {\n            console.log('ADD_TABLE-------------------->', response.data);\n            dispatch ({\n                type: ADD_TABLE,\n                payload: response.data\n            })\n        })\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {ListGroup, ListGroupItem} from 'reactstrap';\nimport * as actions from '../redux/actions';\n\nclass MenuList extends Component {\n   componentDidMount(){\n        this.props.getMenuList();\n    }\n\n    onClicked (menu) {\n        this.props.selectMenu(menu);\n        this.props.getProductList(menu.menuId);\n    }\n\n    render() {\n        return (\n            <div>\n               <ListGroup>\n                    {this.props.menus.menu.map((menu)=> (\n                        <ListGroupItem active={menu.menuId === this.props.selectedMenu.menuId} onClick={()=>this.onClicked(menu)} key={menu.menuId} className=\"RoomButton\">\n                            {menu.name}\n                        </ListGroupItem>\n                    ))}\n                </ListGroup>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    console.log(state)\n    return {\n        menus: state.menu,\n        product: state.product.products,\n        selectedMenu: state.menu.selectedMenu,\n    }\n}\n\nexport default connect(mapStateToProps, actions)(MenuList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../redux/actions';\n\nclass ProductList extends Component {\n    render() {\n        return (\n            <div style={{display:'flex', flexDirection:'row',flexWrap:'wrap',}}>\n                    {this.props.product.map(products=> (\n                        <div className=\"ProductButton\" key={products.productId}>\n                            {/* <div className=\"EditRow\">\n                                <img className=\"EditIcon\" src={require('../assets/images/edit.png')} />\n                                <img className=\"TrashIcon\" src={require('../assets/images/trash.png')} />\n                            </div> */}\n                            <h6>{products.name}</h6>\n                            <p style={{fontSize:13}}>₺ {products.price}</p>\n                        </div>\n                    ))}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    console.log(state.product.products)\n    return {\n        product: state.product.products\n    }\n}\n\nexport default connect(mapStateToProps, actions)(ProductList);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Button, Form,FormGroup, Label, Input } from 'reactstrap';\nimport * as actions from '../redux/actions';\n\nclass AddProduct extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            productName: '',\n            price:'',\n            menuId:0,\n            description: '',\n        }\n    }\n\n\n    saveProduct () {\n        let product = {\n            productId: 0,\n            menuId: this.props.selectedMenu.menuId,\n            name: this.state.productName,\n            price: this.state.price,\n            photo:'',\n            description: this.state.description,\n        }\n        this.props.addProduct(product);\n        this.setState({\n            productName: '',\n            price:'',\n            menuId:0,\n            description: '',\n        })\n        \n    }\n\n    handleChange =(event) => {\n        this.setState({menuId: parseInt(event.target.value)}) \n    }\n    render() {\n        return (\n            <div className=\"ProductContainer\">\n                <Form>\n\n                    <FormGroup>\n                        <Label for=\"exampleEmail\">\n                        Ürün Adı\n                        </Label>\n                        <Input\n                            id=\"productName\"\n                            name=\"productName\"\n                            type=\"text\"\n                            onChange={(event) => this.setState({productName: event.target.value})} \n                            value={this.state.productName} \n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"examplePassword\">\n                        Fiyat\n                        </Label>\n                        <Input\n                            id=\"price\"\n                            name=\"price\"\n                            type=\"text\"\n                            onChange={(event) => this.setState({price: event.target.value})} \n                            value={this.state.price} \n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"examplePassword\">\n                        Açıklama\n                        </Label>\n                        <Input\n                            id=\"description\"\n                            name=\"description\"\n                            type=\"textarea\"\n                            onChange={(event) => this.setState({description: event.target.value})} \n                            value={this.state.description} \n                        />\n                    </FormGroup>\n                    \n                    {/* <FormGroup>\n                        <Label for=\"exampleFile\">\n                        File\n                        </Label>\n                        <Input\n                        id=\"exampleFile\"\n                        name=\"file\"\n                        type=\"file\"\n                        />\n                        \n                    </FormGroup> */}\n                    <Button onClick={()=> this.saveProduct()} color=\"success\">\n                        Kaydet\n                    </Button>\n                </Form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        selectedMenu: state.menu.selectedMenu,\n        products: state.product\n    }\n}\n\nexport default connect(mapStateToProps, actions)(AddProduct);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {Col, Row, Button, InputGroup, Input, Badge} from 'reactstrap';\nimport MenuList from '../components/MenuList';\nimport * as actions from '../redux/actions';\nimport ProductList from '../components/ProductList';\nimport AddProduct from '../pages/AddProduct';\n\nclass AddMenu extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            menuName: ''\n        }\n    }\n\n    saveMenu () {\n        let menu = {\n            menuId: 0,\n            parentId:0,\n            name: this.state.menuName\n        }\n        this.props.addMenu(menu);\n        this.setState({menuName: ''});\n    }\n    \n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col xs=\"3\">\n                        <div className=\"AddMenu\">\n                            <h2>Menü Ekle</h2>\n                            <InputGroup className=\"AddMenuContainer\">\n                                <Input placeholder=\"Menu Ekle\" onChange={(event) => this.setState({menuName: event.target.value})} value={this.state.menuName} />\n                                <Button onClick={()=> this.saveMenu()} color=\"success\">Kaydet</Button>\n                            </InputGroup>\n                            <MenuList/>\n                        </div>\n                    </Col>\n                    <Col xs=\"5\">\n                        <h2 style={{marginTop:20, marginLeft:15}}>Menü Adı : <Badge color=\"success\">{this.props.selectedMenu.name}</Badge></h2>\n                        <ProductList/>\n                    </Col>\n                    <Col xs=\"4\">\n                        <div className=\"AddProduct\">\n                            <h2 style={{textAlign:'center'}}>Ürün Ekle</h2>\n                            <AddProduct/> \n                        </div> \n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    console.log(state);\n    return {\n        menu: state.menu,\n        product: state.product,\n        selectedMenu: state.menu.selectedMenu\n    }\n}\n\nexport default connect(mapStateToProps, actions)(AddMenu);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst logo = require('../assets/images/terraceLogo.png');\n\nconst navOptions = [\n    { key:1 , label : <Link to='/'>Salon Ekle</Link>},\n    { key:2 , label : <Link to='/menu'>Menu Ekle</Link>},\n]\nexport default class NavbarMenu extends Component {\n    render() {\n        return (\n            <div>\n                <header className='container-fluid flex'>\n                    <div>\n                        <img src={logo} className=\"Logo\" />\n                    </div>\n                    <ul className='flex ul'>\n                        {navOptions.map((list, index)=> (\n                            <li key={list.key}>\n                                {list.label}\n                            </li>\n                        ))}\n                    </ul>\n                </header>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {ListGroup, ListGroupItem} from 'reactstrap';\nimport * as actions from '../redux/actions';\n\nclass RoomList extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      roomName: '',\n      description: '',\n      modalRoom: false\n    }\n}\n  componentDidMount(){\n    this.props.getRoomList();\n}\n\nonClicked (room) {\n  this.props.selectRoom(room);\n    this.props.getTableList(room.roomId);\n}\n\n  render() {\n    return (\n      <div>\n        <ListGroup>\n          {this.props.rooms.room.map(room => (\n            <ListGroupItem active={room.roomId === this.props.selectedRoom.roomId} onClick={()=>this.onClicked(room)} key={room.roomId} className=\"RoomButton\">\n              {room.name}\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log('room',state.room.selectedRoom);\n  return {\n      rooms: state.room,\n      selectedRoom: state.room.selectedRoom,\n  }\n}\n\nexport default connect(mapStateToProps, actions)(RoomList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {ListGroup, ListGroupItem} from 'reactstrap';\nimport * as actions from '../redux/actions';\n\nclass TableList extends Component {\n  render() {\n    return (\n        \n        <div style={{display:'flex', flexDirection:'row',flexWrap:'wrap',}} className=\"TableContainer\">\n                    {this.props.tables.table.map(table=> (\n                        <div className=\"MasaButton\" key={table.tableId}>\n                            <h6>{table.name}</h6>\n                        </div>\n                    ))}\n            </div>\n      \n  )\n}\n}\n\nconst mapStateToProps = state => {\nreturn {\n    tables: state.table\n}\n}\n\nexport default connect(mapStateToProps, actions)(TableList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TableList from '../components/TableList';\nimport { Button, Form,FormGroup, Label, Input } from 'reactstrap';\nimport * as actions from '../redux/actions';\n\nclass AddTable extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        tableName: '',\n        description: '',\n    }\n}\n\n\nsaveTable () {\n    let table = {\n        tableId: 0,\n        roomId: this.props.selectedRoom.roomId,\n        name: this.state.tableName,\n        description: this.state.description,\n        statu: 0,\n        date: new Date(),\n        userId: 0,\n        firstName: '',\n        lastName: ''\n       \n    }\n    this.props.addTable(table);\n    this.setState({tableName: '',\n    description: '',})\n    \n}\n\nhandleChange =(event) => {\n    this.setState({roomId: parseInt(event.target.value)}) \n}\n  render() {\n    return (\n      <div className=\"ProductContainer\">\n        <Form>\n\n                    <FormGroup>\n                        <Label for=\"exampleMasa\">\n                        Masa Adı\n                        </Label>\n                        <Input\n                            id=\"tableName\"\n                            name=\"tableName\"\n                            type=\"text\"\n                            onChange={(event) => this.setState({tableName: event.target.value})} \n                            value={this.state.tableName} \n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"exampleDescription\">\n                        Açıklama\n                        </Label>\n                        <Input\n                            id=\"description\"\n                            name=\"description\"\n                            type=\"textarea\"\n                            onChange={(event) => this.setState({description: event.target.value})} \n                            value={this.state.description} \n                        />\n                    </FormGroup>\n                    <Button onClick={()=> this.saveTable()} color=\"success\">\n                        Kaydet\n                    </Button>\n                </Form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\nconsole.log(state.room.selectedRoom)\n  return {\n      tables: state.table,\n      selectedRoom: state.room.selectedRoom,\n  }\n}\n\nexport default connect(mapStateToProps, actions)(AddTable);","import React, { Component} from 'react';\nimport { Row, Col, InputGroup, Input, Button, Badge} from 'reactstrap';\nimport NavbarMenu from '../components/NavbarMenu';\nimport RoomList from '../components/RoomList';\nimport AddTable from './AddTable';\nimport { connect } from 'react-redux';\nimport * as actions from '../redux/actions';\nimport TableList from '../components/TableList';\n\nclass AddRoom extends Component {\n  constructor(props){\n    super(props);\n    this.state= {\n      roomName: '',\n    }\n  }\n\n  saveRoom() {\n    let room = {\n        roomId: 0,\n        name: this.state.roomName,\n    }\n    this.props.addRoom(room);\n    this.setState({roomName:''})\n  } \n  render(){\n    return (\n      <div>\n        <Row>\n            <Col xs=\"3\" className='RoomContainer'>\n              <div className=\"AddMenu\">\n                <h2>Salon Ekle</h2>\n                  <InputGroup className=\"AddMenuContainer\">\n                      <Input placeholder=\"Salon Ekle\" onChange={(event) => this.setState({roomName: event.target.value})} value={this.state.roomName} />\n                      <Button onClick={()=> this.saveRoom()} color=\"success\">Kaydet</Button>\n                  </InputGroup>\n                <RoomList/>\n              </div>\n            </Col>\n            <Col xs=\"6\">\n            <h2 style={{marginTop:20, marginLeft:15}}>Salon Adı : <Badge color=\"success\">{this.props.selectedRoom.name}</Badge></h2>\n              <TableList/>\n            </Col>\n            <Col xs=\"3\">\n              <div className=\"AddProduct\">\n                  <h2 style={{textAlign:'center'}}>Masa Ekle</h2>\n                  <AddTable/> \n              </div> \n            </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state.room.selectedRoom)\n  return {\n      selectedRoom: state.room.selectedRoom,\n  }\n}\nexport default connect(mapStateToProps, actions)(AddRoom);","import React from 'react';\nimport './assets/css/style.css';\nimport { BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\nimport AddMenu from './pages/AddMenu';\nimport AddRoom from './pages/AddRoom';\nimport NavbarMenu from './components/NavbarMenu';\n\nconst appRoutes = [\n  { key: 1, path: \"/\", element: <AddRoom /> },\n  { key: 2, path: \"/menu\", element: <AddMenu /> },\n]\n\nfunction App() {\n  return (\n    <Router>\n        <div>\n          <NavbarMenu/>\n        <Routes>\n          {appRoutes.map((route)=> (\n            <Route {...route} />\n          ))}\n        </Routes>\n        </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ADD_MENU, GET_MENU_LIST,SELECT_MENU} from '../actions/types';\n\nconst INISIAL_STATE = {\n    menu: [],\n    selectedMenu:{},\n}\n\nexport default (state= INISIAL_STATE, action) => {\n    switch (action.type) {\n        case GET_MENU_LIST:\n            return {...state, menu: action.payload}\n        case ADD_MENU:\n            return {...state, menu: state.menu.concat(action.payload)}\n        case SELECT_MENU:\n            return {...state, selectedMenu: action.payload}\n        default:\n            return state;\n    }\n}","import { GET_PRODUCT_LIST, ADD_PRODUCT } from '../actions/types';\n\nconst INITIAL_STATE={\n    products: []\n }\n \n export default (state = INITIAL_STATE, action) => {\n     console.log('3------->', action.payload )\n     switch (action.type){\n         case  ADD_PRODUCT:\n             return {...state, products: state.products.concat(action.payload)}\n         case GET_PRODUCT_LIST:\n             return {...state, products: action.payload}\n         default:\n             return state;\n     }\n }","import {ADD_ROOM, GET_ROOM_LIST, SELECT_ROOM} from '../actions/types';\n\nconst INISIAL_STATE = {\n    room: [],\n    selectedRoom: {},\n}\n\nexport default (state= INISIAL_STATE, action) => {\n    switch (action.type) {\n        case GET_ROOM_LIST:\n            return {...state, room: action.payload}\n        case ADD_ROOM:\n            return {...state, room: state.room.concat(action.payload)}\n        case SELECT_ROOM:\n            return {...state, selectedRoom: action.payload}\n        default:\n            return state;\n    }\n}","import {ADD_TABLE, GET_TABLE_LIST} from '../actions/types';\n\nconst INISIAL_STATE = {\n    table: []\n}\n\nexport default (state= INISIAL_STATE, action) => {\n    switch (action.type) {\n        case GET_TABLE_LIST:\n            return {...state, table: action.payload}\n        case ADD_TABLE:\n            return {...state, table: state.table.concat(action.payload)}\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport MenuReducer from './menuReducer';\nimport ProductReducer from './productReducer';\nimport RoomReducer from './roomReducer';\nimport TableReducer from './tableReducer';\n\nexport default combineReducers({\n    menu: MenuReducer,\n    product: ProductReducer,\n    room: RoomReducer,\n    table: TableReducer,\n});","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Provider} from 'react-redux';\nimport {applyMiddleware, createStore} from 'redux';\nimport reducers from './redux/reducers';\nimport ReduxThunk from 'redux-thunk';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nconst store = createStore(reducers, {}, applyMiddleware(ReduxThunk));\n\nroot.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}